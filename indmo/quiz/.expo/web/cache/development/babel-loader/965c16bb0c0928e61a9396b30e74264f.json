{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { RadioButton, Text } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar question = {\n  perg: \"Teco Teco do Beetlejuice do Oldrikandalahai do meu Saco?\",\n  resp: [{\n    text: 'Biruteco do Biro Biro do Marisco de Mamão Papaya',\n    right: true\n  }, {\n    text: '??????????',\n    right: false\n  }, {\n    text: 'Ligue 188 CVV',\n    right: false\n  }, {\n    text: 'Mastigue a cueca com a bundinha',\n    right: false\n  }]\n};\nvar respSort = question.resp.sort(function () {\n  return Math.random() - 0.5;\n});\nexport default function Question1(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var question = route.params.question;\n  console.log(question);\n  var score;\n  var _useState = useState(9),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var storeData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.setItem('score', score + 1);\n      } catch (e) {\n      }\n    });\n    return function storeData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var getData = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var valor = yield AsyncStorage.getItem(\"score\");\n        if (valor == null) {\n          valor = 0;\n        }\n        console.log(valor);\n        score = parseInt(valor);\n      } catch (e) {\n        console.log(e);\n      }\n    });\n    return function getData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.question,\n      children: _jsx(Text, {\n        style: styles.questionText,\n        children: question.perg\n      })\n    }), _jsx(View, {\n      style: styles.options,\n      children: _jsx(RadioButton.Group, {\n        onValueChange: function onValueChange(newValue) {\n          return setValue(newValue);\n        },\n        value: value,\n        children: respSort.map(function (r, indice) {\n          return _jsxs(View, {\n            style: styles.option,\n            children: [_jsx(Text, {\n              style: styles.optionText,\n              children: r.text\n            }), _jsx(RadioButton, {\n              value: indice,\n              status: 'unchecked'\n            })]\n          }, indice);\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.btn,\n      onPress: function onPress() {\n        if (value != 9) {\n          if (question.resp[value].right) {\n            getData().then(function () {\n              storeData();\n            });\n          }\n          navigation.push('Q1');\n        }\n      },\n      children: _jsx(Text, {\n        style: styles.btnText,\n        children: \"CONFIRMAR\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#111\",\n    alignItems: \"center\",\n    padding: 15,\n    position: \"relative\"\n  },\n  question: {\n    width: '100%',\n    backgroundColor: '#113',\n    borderColor: '#55a',\n    borderWidth: 2,\n    padding: 10\n  },\n  questionText: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  option: {\n    flexDirection: 'row-reverse',\n    width: '100%',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    borderWidth: 1,\n    borderColor: '#226',\n    marginBottom: 10,\n    backgroundColor: '#002'\n  },\n  optionText: {\n    color: \"#fff\",\n    fontSize: 16\n  },\n  options: {\n    marginTop: 50\n  },\n  btn: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 50,\n    paddingVertical: 25,\n    borderColor: '#55a',\n    borderWidth: 2,\n    marginTop: 40,\n    shadowColor: '#55a',\n    shadowOpacity: 1,\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowRadius: 20,\n    position: 'absolute',\n    bottom: 30\n  },\n  btnText: {\n    fontSize: 40,\n    color: '#fff'\n  }\n});","map":{"version":3,"names":["useState","useEffect","AsyncStorage","RadioButton","Text","question","perg","resp","text","right","respSort","sort","Math","random","Question1","route","navigation","params","console","log","score","value","setValue","storeData","setItem","e","getData","valor","getItem","parseInt","styles","container","questionText","options","newValue","map","r","indice","option","optionText","btn","then","push","btnText","StyleSheet","create","flex","backgroundColor","alignItems","padding","position","width","borderColor","borderWidth","fontSize","color","flexDirection","justifyContent","paddingHorizontal","paddingVertical","marginBottom","marginTop","display","shadowColor","shadowOpacity","shadowOffset","height","shadowRadius","bottom"],"sources":["C:/Users/des/Documents/2DES/indmo/quiz/src/pages/Q1/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  ImageBackground,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport { SafeAreaView, ScrollView } from \"react-native-web\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { RadioButton, Text } from 'react-native-paper';\r\n\r\nconst question = {\r\n  perg: \"Teco Teco do Beetlejuice do Oldrikandalahai do meu Saco?\",\r\n  resp :[\r\n      {\r\n          text: 'Biruteco do Biro Biro do Marisco de Mamão Papaya',\r\n          right: true\r\n      },\r\n      {\r\n          text: '??????????',\r\n          right: false\r\n      },\r\n      {\r\n          text: 'Ligue 188 CVV',\r\n          right: false\r\n      },\r\n      {\r\n          text: 'Mastigue a cueca com a bundinha',\r\n          right: false\r\n      },\r\n  ]\r\n}\r\n\r\n\r\nlet respSort = question.resp.sort(() => Math.random() - 0.5)\r\n\r\n\r\nexport default function Question1({ route, navigation }) {\r\n\r\n  const {question} = route.params\r\n\r\n  console.log(question)\r\n\r\n  var score\r\n  const [value, setValue] = useState(9)\r\n\r\n  const storeData = async () => {\r\n    try {\r\n        await AsyncStorage.setItem('score', score + 1)\r\n      \r\n    } catch (e) {\r\n      // saving error\r\n    }\r\n}\r\n\r\n  const getData = async () => {\r\n    try {\r\n      var valor = await AsyncStorage.getItem(\"score\");\r\n      if (valor == null){\r\n        valor = 0\r\n      }\r\n      console.log(valor)\r\n    score = parseInt(valor)\r\n    \r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.question}>\r\n        <Text style={styles.questionText}>{question.perg}</Text>\r\n      </View>\r\n      <View style={styles.options}>\r\n        <RadioButton.Group onValueChange={newValue => setValue(newValue)} value={value}>\r\n            {\r\n                respSort.map((r, indice) => {\r\n                    return(\r\n                        <View style={styles.option} key={indice}>\r\n                            <Text style={styles.optionText}>{r.text}</Text>\r\n                            <RadioButton value={indice}  status={ 'unchecked' } />\r\n                        </View>\r\n                    )\r\n                })\r\n            }\r\n            </RadioButton.Group>\r\n      </View>\r\n      <TouchableOpacity style={styles.btn} onPress={() => {\r\n        if (value != 9) {\r\n            if(question.resp[value].right){\r\n                getData()\r\n                .then(() => {\r\n                    storeData()\r\n                })\r\n            }\r\n            navigation.push('Q1')\r\n        }\r\n      }}>\r\n        <Text style={styles.btnText}>CONFIRMAR</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#111\",\r\n    alignItems: \"center\",\r\n    padding: 15,\r\n    position: \"relative\",\r\n  },\r\n  question: {\r\n    width: '100%',\r\n    backgroundColor: '#113',\r\n    borderColor: '#55a',\r\n    borderWidth: 2,\r\n    padding: 10\r\n  },\r\n  questionText: {\r\n    fontSize: 20,\r\n    color: '#fff'\r\n  },\r\n  option:{\r\n    flexDirection: 'row-reverse',\r\n    width: '100%',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 5,\r\n    paddingVertical: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#226',\r\n    marginBottom: 10,\r\n    backgroundColor: '#002'\r\n  },\r\n  optionText:{\r\n    color: \"#fff\",\r\n    fontSize: 16\r\n  },\r\n  options: {\r\n    marginTop: 50\r\n  },\r\n  btn: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 50,\r\n    paddingVertical: 25,\r\n    borderColor: '#55a',\r\n    borderWidth: 2,\r\n    marginTop: 40,\r\n    shadowColor: '#55a',\r\n    shadowOpacity: 1,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0\r\n    },\r\n    shadowRadius: 20,\r\n    position: 'absolute',\r\n    bottom: 30\r\n  },\r\n  btnText: {\r\n    fontSize: 40,\r\n    color: '#fff'\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}